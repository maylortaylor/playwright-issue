var Ft = Object.defineProperty;
var It = (t, e, i) => e in t ? Ft(t, e, { enumerable: !0, configurable: !0, writable: !0, value: i }) : t[e] = i;
var z = (t, e, i) => (It(t, typeof e != "symbol" ? e + "" : e, i), i);
import lt, { createContext as Wt, useContext as Vt, useRef as I, useEffect as oe, useState as ut, useCallback as Le, useLayoutEffect as Ut, useImperativeHandle as jt, forwardRef as dt, useMemo as Ht } from "react";
import { ScreenSpaceEventType as $, ScreenSpaceEventHandler as mt, Event as Xe, BillboardCollection as xt, BillboardGraphics as zt, BoxGraphics as Nt, Cesium3DTileset as Yt, Cesium3DTilesetGraphics as Kt, CesiumWidget as qt, ClassificationPrimitive as Jt, CloudCollection as Zt, CorridorGraphics as Xt, CustomDataSource as Qt, CylinderGraphics as ei, CzmlDataSource as ti, EllipseGraphics as ii, EllipsoidGraphics as ni, Entity as oi, Fog as Qe, GeoJsonDataSource as ri, GroundPolylinePrimitive as si, GroundPrimitive as ai, ImageryLayer as ci, KmlDataSource as li, LabelCollection as ui, LabelGraphics as di, Model as mi, ModelGraphics as fi, Moon as et, ParticleSystem as hi, PathGraphics as yi, PlaneGraphics as pi, PointGraphics as vi, PointPrimitiveCollection as gi, PolygonGraphics as Ci, PolylineCollection as Pi, PolylineGraphics as Si, PolylineVolumeGraphics as Ei, PostProcessStage as bi, PostProcessStageLibrary as N, PostProcessStageComposite as wi, Primitive as Di, RectangleGraphics as Ri, SceneMode as Oe, Sun as tt, TimeDynamicPointCloud as $i, Viewer as Ti, WallGraphics as Mi } from "cesium";
import { createPortal as ki } from "react-dom";
const Fe = Wt({}), { Provider: hs, Consumer: _i } = Fe, Ee = () => Vt(Fe) || {}, be = (t, e) => {
  const i = (o) => {
    const r = Ee(), c = I(), u = I(!1);
    return oe(() => () => {
      r.camera && o.cancelFlightOnUnmount && r.camera.cancelFlight();
    }, [r.camera, o.cancelFlightOnUnmount]), oe(() => {
      r.camera && r.scene && !r.scene.isDestroyed() && (!o.once || !u.current) && (r.camera.cancelFlight(), e(r.camera, o, c.current), u.current = !0), c.current = o;
    }), null;
  };
  return i.displayName = t, i;
};
var Ge = { exports: {} }, le = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var it;
function Li() {
  if (it)
    return le;
  it = 1;
  var t = lt, e = Symbol.for("react.element"), i = Symbol.for("react.fragment"), o = Object.prototype.hasOwnProperty, r = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, c = { key: !0, ref: !0, __self: !0, __source: !0 };
  function u(y, m, E) {
    var g, T = {}, k = null, p = null;
    E !== void 0 && (k = "" + E), m.key !== void 0 && (k = "" + m.key), m.ref !== void 0 && (p = m.ref);
    for (g in m)
      o.call(m, g) && !c.hasOwnProperty(g) && (T[g] = m[g]);
    if (y && y.defaultProps)
      for (g in m = y.defaultProps, m)
        T[g] === void 0 && (T[g] = m[g]);
    return { $$typeof: e, type: y, key: k, ref: p, props: T, _owner: r.current };
  }
  return le.Fragment = i, le.jsx = u, le.jsxs = u, le;
}
var ue = {};
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var nt;
function Oi() {
  return nt || (nt = 1, process.env.NODE_ENV !== "production" && function() {
    var t = lt, e = Symbol.for("react.element"), i = Symbol.for("react.portal"), o = Symbol.for("react.fragment"), r = Symbol.for("react.strict_mode"), c = Symbol.for("react.profiler"), u = Symbol.for("react.provider"), y = Symbol.for("react.context"), m = Symbol.for("react.forward_ref"), E = Symbol.for("react.suspense"), g = Symbol.for("react.suspense_list"), T = Symbol.for("react.memo"), k = Symbol.for("react.lazy"), p = Symbol.for("react.offscreen"), _ = Symbol.iterator, U = "@@iterator";
    function Y(n) {
      if (n === null || typeof n != "object")
        return null;
      var s = _ && n[_] || n[U];
      return typeof s == "function" ? s : null;
    }
    var L = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function b(n) {
      {
        for (var s = arguments.length, a = new Array(s > 1 ? s - 1 : 0), d = 1; d < s; d++)
          a[d - 1] = arguments[d];
        re("error", n, a);
      }
    }
    function re(n, s, a) {
      {
        var d = L.ReactDebugCurrentFrame, v = d.getStackAddendum();
        v !== "" && (s += "%s", a = a.concat([v]));
        var S = a.map(function(h) {
          return String(h);
        });
        S.unshift("Warning: " + s), Function.prototype.apply.call(console[n], console, S);
      }
    }
    var me = !1, q = !1, se = !1, J = !1, ae = !1, Z;
    Z = Symbol.for("react.module.reference");
    function fe(n) {
      return !!(typeof n == "string" || typeof n == "function" || n === o || n === c || ae || n === r || n === E || n === g || J || n === p || me || q || se || typeof n == "object" && n !== null && (n.$$typeof === k || n.$$typeof === T || n.$$typeof === u || n.$$typeof === y || n.$$typeof === m || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      n.$$typeof === Z || n.getModuleId !== void 0));
    }
    function he(n, s, a) {
      var d = n.displayName;
      if (d)
        return d;
      var v = s.displayName || s.name || "";
      return v !== "" ? a + "(" + v + ")" : a;
    }
    function w(n) {
      return n.displayName || "Context";
    }
    function P(n) {
      if (n == null)
        return null;
      if (typeof n.tag == "number" && b("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof n == "function")
        return n.displayName || n.name || null;
      if (typeof n == "string")
        return n;
      switch (n) {
        case o:
          return "Fragment";
        case i:
          return "Portal";
        case c:
          return "Profiler";
        case r:
          return "StrictMode";
        case E:
          return "Suspense";
        case g:
          return "SuspenseList";
      }
      if (typeof n == "object")
        switch (n.$$typeof) {
          case y:
            var s = n;
            return w(s) + ".Consumer";
          case u:
            var a = n;
            return w(a._context) + ".Provider";
          case m:
            return he(n, n.render, "ForwardRef");
          case T:
            var d = n.displayName || null;
            return d !== null ? d : P(n.type) || "Memo";
          case k: {
            var v = n, S = v._payload, h = v._init;
            try {
              return P(h(S));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var M = Object.assign, B = 0, W, O, j, H, C, X, x;
    function Q() {
    }
    Q.__reactDisabledLog = !0;
    function K() {
      {
        if (B === 0) {
          W = console.log, O = console.info, j = console.warn, H = console.error, C = console.group, X = console.groupCollapsed, x = console.groupEnd;
          var n = {
            configurable: !0,
            enumerable: !0,
            value: Q,
            writable: !0
          };
          Object.defineProperties(console, {
            info: n,
            log: n,
            warn: n,
            error: n,
            group: n,
            groupCollapsed: n,
            groupEnd: n
          });
        }
        B++;
      }
    }
    function ft() {
      {
        if (B--, B === 0) {
          var n = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: M({}, n, {
              value: W
            }),
            info: M({}, n, {
              value: O
            }),
            warn: M({}, n, {
              value: j
            }),
            error: M({}, n, {
              value: H
            }),
            group: M({}, n, {
              value: C
            }),
            groupCollapsed: M({}, n, {
              value: X
            }),
            groupEnd: M({}, n, {
              value: x
            })
          });
        }
        B < 0 && b("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var we = L.ReactCurrentDispatcher, De;
    function ye(n, s, a) {
      {
        if (De === void 0)
          try {
            throw Error();
          } catch (v) {
            var d = v.stack.trim().match(/\n( *(at )?)/);
            De = d && d[1] || "";
          }
        return `
` + De + n;
      }
    }
    var Re = !1, pe;
    {
      var ht = typeof WeakMap == "function" ? WeakMap : Map;
      pe = new ht();
    }
    function Ie(n, s) {
      if (!n || Re)
        return "";
      {
        var a = pe.get(n);
        if (a !== void 0)
          return a;
      }
      var d;
      Re = !0;
      var v = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var S;
      S = we.current, we.current = null, K();
      try {
        if (s) {
          var h = function() {
            throw Error();
          };
          if (Object.defineProperty(h.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(h, []);
            } catch (V) {
              d = V;
            }
            Reflect.construct(n, [], h);
          } else {
            try {
              h.call();
            } catch (V) {
              d = V;
            }
            n.call(h.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (V) {
            d = V;
          }
          n();
        }
      } catch (V) {
        if (V && d && typeof V.stack == "string") {
          for (var f = V.stack.split(`
`), G = d.stack.split(`
`), D = f.length - 1, R = G.length - 1; D >= 1 && R >= 0 && f[D] !== G[R]; )
            R--;
          for (; D >= 1 && R >= 0; D--, R--)
            if (f[D] !== G[R]) {
              if (D !== 1 || R !== 1)
                do
                  if (D--, R--, R < 0 || f[D] !== G[R]) {
                    var A = `
` + f[D].replace(" at new ", " at ");
                    return n.displayName && A.includes("<anonymous>") && (A = A.replace("<anonymous>", n.displayName)), typeof n == "function" && pe.set(n, A), A;
                  }
                while (D >= 1 && R >= 0);
              break;
            }
        }
      } finally {
        Re = !1, we.current = S, ft(), Error.prepareStackTrace = v;
      }
      var te = n ? n.displayName || n.name : "", Ze = te ? ye(te) : "";
      return typeof n == "function" && pe.set(n, Ze), Ze;
    }
    function yt(n, s, a) {
      return Ie(n, !1);
    }
    function pt(n) {
      var s = n.prototype;
      return !!(s && s.isReactComponent);
    }
    function ve(n, s, a) {
      if (n == null)
        return "";
      if (typeof n == "function")
        return Ie(n, pt(n));
      if (typeof n == "string")
        return ye(n);
      switch (n) {
        case E:
          return ye("Suspense");
        case g:
          return ye("SuspenseList");
      }
      if (typeof n == "object")
        switch (n.$$typeof) {
          case m:
            return yt(n.render);
          case T:
            return ve(n.type, s, a);
          case k: {
            var d = n, v = d._payload, S = d._init;
            try {
              return ve(S(v), s, a);
            } catch {
            }
          }
        }
      return "";
    }
    var ge = Object.prototype.hasOwnProperty, We = {}, Ve = L.ReactDebugCurrentFrame;
    function Ce(n) {
      if (n) {
        var s = n._owner, a = ve(n.type, n._source, s ? s.type : null);
        Ve.setExtraStackFrame(a);
      } else
        Ve.setExtraStackFrame(null);
    }
    function vt(n, s, a, d, v) {
      {
        var S = Function.call.bind(ge);
        for (var h in n)
          if (S(n, h)) {
            var f = void 0;
            try {
              if (typeof n[h] != "function") {
                var G = Error((d || "React class") + ": " + a + " type `" + h + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof n[h] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw G.name = "Invariant Violation", G;
              }
              f = n[h](s, h, d, a, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (D) {
              f = D;
            }
            f && !(f instanceof Error) && (Ce(v), b("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", d || "React class", a, h, typeof f), Ce(null)), f instanceof Error && !(f.message in We) && (We[f.message] = !0, Ce(v), b("Failed %s type: %s", a, f.message), Ce(null));
          }
      }
    }
    var gt = Array.isArray;
    function $e(n) {
      return gt(n);
    }
    function Ct(n) {
      {
        var s = typeof Symbol == "function" && Symbol.toStringTag, a = s && n[Symbol.toStringTag] || n.constructor.name || "Object";
        return a;
      }
    }
    function Pt(n) {
      try {
        return Ue(n), !1;
      } catch {
        return !0;
      }
    }
    function Ue(n) {
      return "" + n;
    }
    function je(n) {
      if (Pt(n))
        return b("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", Ct(n)), Ue(n);
    }
    var ce = L.ReactCurrentOwner, St = {
      key: !0,
      ref: !0,
      __self: !0,
      __source: !0
    }, He, xe, Te;
    Te = {};
    function Et(n) {
      if (ge.call(n, "ref")) {
        var s = Object.getOwnPropertyDescriptor(n, "ref").get;
        if (s && s.isReactWarning)
          return !1;
      }
      return n.ref !== void 0;
    }
    function bt(n) {
      if (ge.call(n, "key")) {
        var s = Object.getOwnPropertyDescriptor(n, "key").get;
        if (s && s.isReactWarning)
          return !1;
      }
      return n.key !== void 0;
    }
    function wt(n, s) {
      if (typeof n.ref == "string" && ce.current && s && ce.current.stateNode !== s) {
        var a = P(ce.current.type);
        Te[a] || (b('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', P(ce.current.type), n.ref), Te[a] = !0);
      }
    }
    function Dt(n, s) {
      {
        var a = function() {
          He || (He = !0, b("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", s));
        };
        a.isReactWarning = !0, Object.defineProperty(n, "key", {
          get: a,
          configurable: !0
        });
      }
    }
    function Rt(n, s) {
      {
        var a = function() {
          xe || (xe = !0, b("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", s));
        };
        a.isReactWarning = !0, Object.defineProperty(n, "ref", {
          get: a,
          configurable: !0
        });
      }
    }
    var $t = function(n, s, a, d, v, S, h) {
      var f = {
        // This tag allows us to uniquely identify this as a React Element
        $$typeof: e,
        // Built-in properties that belong on the element
        type: n,
        key: s,
        ref: a,
        props: h,
        // Record the component responsible for creating this element.
        _owner: S
      };
      return f._store = {}, Object.defineProperty(f._store, "validated", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: !1
      }), Object.defineProperty(f, "_self", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: d
      }), Object.defineProperty(f, "_source", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: v
      }), Object.freeze && (Object.freeze(f.props), Object.freeze(f)), f;
    };
    function Tt(n, s, a, d, v) {
      {
        var S, h = {}, f = null, G = null;
        a !== void 0 && (je(a), f = "" + a), bt(s) && (je(s.key), f = "" + s.key), Et(s) && (G = s.ref, wt(s, v));
        for (S in s)
          ge.call(s, S) && !St.hasOwnProperty(S) && (h[S] = s[S]);
        if (n && n.defaultProps) {
          var D = n.defaultProps;
          for (S in D)
            h[S] === void 0 && (h[S] = D[S]);
        }
        if (f || G) {
          var R = typeof n == "function" ? n.displayName || n.name || "Unknown" : n;
          f && Dt(h, R), G && Rt(h, R);
        }
        return $t(n, f, G, v, d, ce.current, h);
      }
    }
    var Me = L.ReactCurrentOwner, ze = L.ReactDebugCurrentFrame;
    function ee(n) {
      if (n) {
        var s = n._owner, a = ve(n.type, n._source, s ? s.type : null);
        ze.setExtraStackFrame(a);
      } else
        ze.setExtraStackFrame(null);
    }
    var ke;
    ke = !1;
    function _e(n) {
      return typeof n == "object" && n !== null && n.$$typeof === e;
    }
    function Ne() {
      {
        if (Me.current) {
          var n = P(Me.current.type);
          if (n)
            return `

Check the render method of \`` + n + "`.";
        }
        return "";
      }
    }
    function Mt(n) {
      {
        if (n !== void 0) {
          var s = n.fileName.replace(/^.*[\\\/]/, ""), a = n.lineNumber;
          return `

Check your code at ` + s + ":" + a + ".";
        }
        return "";
      }
    }
    var Ye = {};
    function kt(n) {
      {
        var s = Ne();
        if (!s) {
          var a = typeof n == "string" ? n : n.displayName || n.name;
          a && (s = `

Check the top-level render call using <` + a + ">.");
        }
        return s;
      }
    }
    function Ke(n, s) {
      {
        if (!n._store || n._store.validated || n.key != null)
          return;
        n._store.validated = !0;
        var a = kt(s);
        if (Ye[a])
          return;
        Ye[a] = !0;
        var d = "";
        n && n._owner && n._owner !== Me.current && (d = " It was passed a child from " + P(n._owner.type) + "."), ee(n), b('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', a, d), ee(null);
      }
    }
    function qe(n, s) {
      {
        if (typeof n != "object")
          return;
        if ($e(n))
          for (var a = 0; a < n.length; a++) {
            var d = n[a];
            _e(d) && Ke(d, s);
          }
        else if (_e(n))
          n._store && (n._store.validated = !0);
        else if (n) {
          var v = Y(n);
          if (typeof v == "function" && v !== n.entries)
            for (var S = v.call(n), h; !(h = S.next()).done; )
              _e(h.value) && Ke(h.value, s);
        }
      }
    }
    function _t(n) {
      {
        var s = n.type;
        if (s == null || typeof s == "string")
          return;
        var a;
        if (typeof s == "function")
          a = s.propTypes;
        else if (typeof s == "object" && (s.$$typeof === m || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        s.$$typeof === T))
          a = s.propTypes;
        else
          return;
        if (a) {
          var d = P(s);
          vt(a, n.props, "prop", d, n);
        } else if (s.PropTypes !== void 0 && !ke) {
          ke = !0;
          var v = P(s);
          b("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", v || "Unknown");
        }
        typeof s.getDefaultProps == "function" && !s.getDefaultProps.isReactClassApproved && b("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    function Lt(n) {
      {
        for (var s = Object.keys(n.props), a = 0; a < s.length; a++) {
          var d = s[a];
          if (d !== "children" && d !== "key") {
            ee(n), b("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", d), ee(null);
            break;
          }
        }
        n.ref !== null && (ee(n), b("Invalid attribute `ref` supplied to `React.Fragment`."), ee(null));
      }
    }
    function Je(n, s, a, d, v, S) {
      {
        var h = fe(n);
        if (!h) {
          var f = "";
          (n === void 0 || typeof n == "object" && n !== null && Object.keys(n).length === 0) && (f += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var G = Mt(v);
          G ? f += G : f += Ne();
          var D;
          n === null ? D = "null" : $e(n) ? D = "array" : n !== void 0 && n.$$typeof === e ? (D = "<" + (P(n.type) || "Unknown") + " />", f = " Did you accidentally export a JSX literal instead of a component?") : D = typeof n, b("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", D, f);
        }
        var R = Tt(n, s, a, v, S);
        if (R == null)
          return R;
        if (h) {
          var A = s.children;
          if (A !== void 0)
            if (d)
              if ($e(A)) {
                for (var te = 0; te < A.length; te++)
                  qe(A[te], n);
                Object.freeze && Object.freeze(A);
              } else
                b("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else
              qe(A, n);
        }
        return n === o ? Lt(R) : _t(R), R;
      }
    }
    function Ot(n, s, a) {
      return Je(n, s, a, !0);
    }
    function Gt(n, s, a) {
      return Je(n, s, a, !1);
    }
    var Bt = Gt, At = Ot;
    ue.Fragment = o, ue.jsx = Bt, ue.jsxs = At;
  }()), ue;
}
process.env.NODE_ENV === "production" ? Ge.exports = Li() : Ge.exports = Oi();
var ie = Ge.exports;
function Gi(t, e) {
  return e ? Be(t).reduce((i, [o, r]) => (de(e, o) && (i[o] = r), i), {}) : {};
}
function Be(t) {
  return Object.keys(t).map((e) => [e, t[e]]);
}
function de(t, e) {
  return !!t && t.indexOf(e) !== -1;
}
function Bi(t, e) {
  return !!t && !!e && [...Object.keys(t), ...Object.keys(e)].every((i) => t[i] === e[i]);
}
function Ai(t) {
  return t && typeof t.isDestroyed == "function" && typeof t.destroy == "function";
}
function Fi(t) {
  return Ai(t) && t.isDestroyed();
}
const ne = "__RESIUM_EVENT_MANAGER", Ae = [
  "onClick",
  "onDoubleClick",
  "onMouseDown",
  "onMouseUp",
  "onMiddleClick",
  "onMiddleDown",
  "onMiddleUp",
  "onMouseMove",
  "onPinchEnd",
  "onPinchMove",
  "onPinchStart",
  "onRightClick",
  "onRightDown",
  "onRightUp",
  "onWheel",
  "onMouseEnter",
  "onMouseLeave"
], Se = class Se {
  constructor(e) {
    z(this, "scene");
    z(this, "sshe");
    z(this, "events", {
      onClick: /* @__PURE__ */ new Map(),
      onDoubleClick: /* @__PURE__ */ new Map(),
      onMouseDown: /* @__PURE__ */ new Map(),
      onMouseUp: /* @__PURE__ */ new Map(),
      onMiddleClick: /* @__PURE__ */ new Map(),
      onMiddleDown: /* @__PURE__ */ new Map(),
      onMiddleUp: /* @__PURE__ */ new Map(),
      onMouseMove: /* @__PURE__ */ new Map(),
      onPinchEnd: /* @__PURE__ */ new Map(),
      onPinchMove: /* @__PURE__ */ new Map(),
      onPinchStart: /* @__PURE__ */ new Map(),
      onRightClick: /* @__PURE__ */ new Map(),
      onRightDown: /* @__PURE__ */ new Map(),
      onRightUp: /* @__PURE__ */ new Map(),
      onWheel: /* @__PURE__ */ new Map(),
      onMouseEnter: /* @__PURE__ */ new Map(),
      onMouseLeave: /* @__PURE__ */ new Map()
    });
    z(this, "hovered");
    z(this, "onMouseMove", (e) => {
      var o, r, c, u, y, m;
      const i = this.pick(e.endPosition);
      this.hovered !== i && (this.hovered && ((o = this.getEventCallback("onMouseLeave", this.hovered)) == null || o(e, this.hovered), (r = this.getEventCallback("onMouseLeave", null)) == null || r(e, this.hovered)), i && ((c = this.getEventCallback("onMouseEnter", i)) == null || c(e, i), (u = this.getEventCallback("onMouseEnter", null)) == null || u(e, i))), i && ((y = this.getEventCallback("onMouseMove", i)) == null || y(e, i)), (m = this.getEventCallback("onMouseMove", null)) == null || m(e, i), this.hovered = i;
    });
    z(this, "eventCallback", (e) => (i) => {
      var r, c;
      const o = this.pick(i == null ? void 0 : i.position);
      o && ((r = this.getEventCallback(e, o)) == null || r(i, o)), (c = this.getEventCallback(e, null)) == null || c(i, o);
    });
    this.scene = e, this.sshe = new mt(e == null ? void 0 : e.canvas);
  }
  destroy() {
    this.hovered = void 0, this.sshe.isDestroyed() || this.sshe.destroy();
  }
  isDestroyed() {
    return this.sshe.isDestroyed();
  }
  on(e, i, o) {
    e && i === "onWheel" || this.events[i].set(e, o);
  }
  off(e, i) {
    this.events[i].delete(e), this.hovered === e && (this.hovered = void 0);
  }
  setEvents(e, i) {
    Be(i).forEach(([o, r]) => {
      const c = o;
      de(Ae, c) && (r ? this.on(e, c, r) : this.off(e, c));
    }), this.commit();
  }
  clearEvents(e) {
    this.hovered = void 0, Ae.forEach((i) => {
      this.off(e, i);
    }), this.commit();
  }
  commit() {
    const e = this.sshe, i = this.sshe.isDestroyed();
    i || (this.events.onMouseEnter.size === 0 && this.events.onMouseLeave.size === 0 && this.events.onMouseMove.size === 0 ? this.sshe.removeInputAction($.MOUSE_MOVE) : this.sshe.getInputAction($.MOUSE_MOVE) || this.sshe.setInputAction(this.onMouseMove, $.MOUSE_MOVE)), Be(this.events).forEach(([o, r]) => {
      if (o === "onMouseEnter" || o === "onMouseLeave" || o === "onMouseMove")
        return;
      const c = Se.eventTypeMap[o];
      i || (r.size === 0 ? e.removeInputAction(c) : e.getInputAction(c) || e.setInputAction(this.eventCallback(o), c));
    });
  }
  getScreenSpaceEventHandler() {
    return this.sshe;
  }
  getEventCallback(e, i) {
    var o, r;
    return i === null ? this.events[e].get(null) : this.events[e].get(i.id) || // Entity
    this.events[e].get((r = (o = i.id) == null ? void 0 : o.entityCollection) == null ? void 0 : r.owner) || // Entity in DataSource
    this.events[e].get(i.primitive) || // Primitive
    this.events[e].get(i.tileset);
  }
  pick(e) {
    var i;
    if (e)
      return (i = this.scene) == null ? void 0 : i.pick(e);
  }
};
z(Se, "eventTypeMap", {
  onClick: $.LEFT_CLICK,
  onDoubleClick: $.LEFT_DOUBLE_CLICK,
  onMouseDown: $.LEFT_DOWN,
  onMouseUp: $.LEFT_UP,
  onMiddleClick: $.MIDDLE_CLICK,
  onMiddleDown: $.MIDDLE_DOWN,
  onMiddleUp: $.MIDDLE_UP,
  onMouseMove: $.MOUSE_MOVE,
  onPinchEnd: $.PINCH_END,
  onPinchMove: $.PINCH_MOVE,
  onPinchStart: $.PINCH_START,
  onRightClick: $.RIGHT_CLICK,
  onRightDown: $.RIGHT_DOWN,
  onRightUp: $.RIGHT_UP,
  onWheel: $.WHEEL,
  onMouseEnter: $.MOUSE_MOVE,
  onMouseLeave: $.MOUSE_MOVE
});
let Pe = Se;
const Ii = ({
  name: t,
  create: e,
  destroy: i,
  provide: o,
  update: r,
  cesiumReadonlyProps: c,
  cesiumEventProps: u,
  otherProps: y,
  setCesiumPropsAfterCreate: m,
  useCommonEvent: E,
  useRootEvent: g
}, T, k) => {
  const p = I(), _ = Ee(), U = I(o ? {} : void 0), Y = I({}), L = I(ot(T)), b = I({}), [re, me] = ut(!1), q = I(!1), se = I(null), J = I(), ae = _ == null ? void 0 : _[ne], Z = Le(
    async (w) => {
      var H;
      if (!p.current)
        return;
      const P = p.current, M = Object.keys(w), B = Object.keys(u || []), W = M.concat(
        Object.keys(b.current).filter((C) => !M.includes(C))
      ).filter((C) => b.current[C] !== w[C]).map((C) => [C, b.current[C], w[C]]), O = [];
      for (const [C, X, x] of W)
        if (c != null && c.includes(C))
          O.push(C);
        else if (de(B, C)) {
          const Q = u == null ? void 0 : u[C], K = P[Q];
          K instanceof Xe && (typeof X > "u" ? (K.addEventListener(x), Y.current[Q] = x) : typeof x > "u" ? (K.removeEventListener(X), delete Y.current[Q]) : (K.removeEventListener(X), K.addEventListener(x)));
        } else
          C !== "children" && !Ae.includes(C) && !(y != null && y.includes(C)) && (P[C] = x);
      const j = g ? (H = U.current) == null ? void 0 : H[ne] : ae;
      if (E && j && p.current && j.setEvents(g ? null : p.current, w), r && q.current) {
        const C = r(p.current, w, b.current, _);
        C && typeof C == "object" && typeof C.then == "function" && await C;
      }
      b.current = w, L.current = w, q.current && O.length > 0 && (process.env.NODE_ENV !== "production" && console.warn(
        `Warning: <${t}> is recreated because following read-only props have been updated: ${O.join(
          ", "
        )}`
      ), he(), fe());
    },
    []
    // eslint-disable-line react-hooks/exhaustive-deps
  ), fe = Le(async () => {
    var B;
    const w = e == null ? void 0 : e(_, L.current, se.current);
    let P;
    if (w && typeof w == "object" && typeof w.then == "function" ? P = await w : P = w, Array.isArray(P) ? (p.current = P[0], J.current = P[1]) : p.current = P, m)
      await Z(L.current);
    else {
      if (p.current && u) {
        const W = p.current;
        for (const O of Object.keys(L.current)) {
          const j = u[O];
          if (j) {
            const H = L.current[O], C = W[j];
            H && C instanceof Xe && C.addEventListener(H);
          }
        }
      }
      b.current = L.current;
    }
    o && p.current && (U.current = {
      ..._,
      ...o(p.current, _, T, J.current)
    });
    const M = g ? (B = U.current) == null ? void 0 : B[ne] : ae;
    E && M && p.current && M.setEvents(g ? null : p.current, L.current), me(!0);
  }, []), he = Le(() => {
    var P, M;
    p.current && i && i(p.current, _, se.current, J.current);
    const w = g ? (P = U.current) == null ? void 0 : P[ne] : ae;
    if (E && w && p.current && w.clearEvents(g ? null : p.current), p.current && !Fi(p.current)) {
      const B = Object.keys(Y.current);
      for (const W of B) {
        const O = p.current[W];
        (M = O == null ? void 0 : O.removeEventListener) == null || M.call(O, Y.current[W]);
      }
    }
    Y.current = {}, U.current = void 0, J.current = void 0, p.current = void 0, me(!1), q.current = !1;
  }, []);
  return Ut(() => (fe(), () => he()), []), oe(() => {
    var P, M;
    const w = ot(T);
    re ? Bi(w, b.current) || (Z(w), (M = (P = _.__$internal) == null ? void 0 : P.onUpdate) == null || M.call(P)) : (b.current = w, L.current = w, q.current = !0);
  }, [_.__$internal, re, T, Z]), jt(k, () => ({
    cesiumElement: p.current
  })), [U.current, re, se];
};
function ot(t) {
  const { children: e, ...i } = t;
  return i;
}
const l = ({
  renderContainer: t,
  noChildren: e,
  containerProps: i,
  defaultProps: o,
  ...r
}) => {
  const c = (u, y) => {
    const m = {
      ...o,
      ...u
    }, [E, g, T] = Ii(
      r,
      m,
      y
    );
    if (e)
      return null;
    const k = g && "children" in m ? m.children : null, p = t ? /* @__PURE__ */ ie.jsx(
      "div",
      {
        "data-testid": "resium-container",
        ref: T,
        ...typeof i == "function" ? i(m) : Gi(m, i),
        children: k
      }
    ) : k ? /* @__PURE__ */ ie.jsx(ie.Fragment, { children: k }) : null;
    return E ? /* @__PURE__ */ ie.jsx(Fe.Provider, { value: E, children: p }) : p;
  };
  return c.displayName = r.name, dt(c);
}, Wi = ["enabled", "selected"], F = (t) => l({
  name: t.name,
  create(e, i) {
    if (!e.scene)
      return;
    const o = t.create(i, e.scene.postProcessStages);
    return typeof i.enabled == "boolean" && (o.enabled = i.enabled), i.selected && "selected" in o && (o.selected = i.selected), t.props.forEach((r) => {
      !de(t.readonlyProps, r) && typeof i[r] < "u" && (o.uniforms[r] = i[r]);
    }), !t.noMount && e.scene && !e.scene.isDestroyed() && e.scene.postProcessStages.add(o), o;
  },
  destroy(e, i) {
    t.noMount ? e.enabled = !1 : (i.scene && !i.scene.isDestroyed() && i.scene.postProcessStages.remove(e), e.isDestroyed() || e.destroy());
  },
  update(e, i, o) {
    t.props.forEach((r) => {
      !de(t.readonlyProps, r) && i[r] !== o[r] && (e.uniforms[r] = i[r]);
    });
  },
  cesiumProps: Wi,
  cesiumReadonlyProps: t.readonlyProps,
  defaultProps: {
    enabled: !0
  }
}), ys = (t) => (
  // supports both functional components and class components
  // eslint-disable-next-line react/display-name
  dt((e, i) => /* @__PURE__ */ ie.jsx(_i, { children: (o) => /* @__PURE__ */ ie.jsx(t, { ...e, ref: i, cesium: o }) }))
), Vi = [
  "alignedAxis",
  "color",
  "disableDepthTestDistance",
  "distanceDisplayCondition",
  "eyeOffset",
  "height",
  "heightReference",
  "horizontalOrigin",
  "image",
  "pixelOffset",
  "pixelOffsetScaleByDistance",
  "position",
  "rotation",
  "scale",
  "scaleByDistance",
  "show",
  "sizeInMeters",
  "translucencyByDistance",
  "verticalOrigin",
  "width",
  "id"
], Ui = l({
  name: "Billboard",
  create(t, e) {
    var i;
    return (i = t.billboardCollection) == null ? void 0 : i.add(e);
  },
  destroy(t, e) {
    e.billboardCollection && !e.billboardCollection.isDestroyed() && e.billboardCollection.remove(t);
  },
  cesiumProps: Vi,
  useCommonEvent: !0
}), ps = Ui, ji = [
  "blendOption",
  "debugShowBoundingVolume",
  "debugShowTextureAtlas",
  "modelMatrix",
  "show"
], Hi = l({
  name: "BillboardCollection",
  create(t, e) {
    if (!t.primitiveCollection)
      return;
    const i = new xt({
      modelMatrix: e.modelMatrix,
      debugShowBoundingVolume: e.debugShowBoundingVolume,
      scene: t.scene,
      blendOption: e.blendOption
    });
    return t.primitiveCollection.add(i), i;
  },
  destroy(t, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(t), t.isDestroyed() || t.destroy();
  },
  provide(t) {
    return {
      billboardCollection: t
    };
  },
  cesiumProps: ji
}), vs = Hi, xi = [
  "image",
  "show",
  "scale",
  "horizontalOrigin",
  "verticalOrigin",
  "eyeOffset",
  "pixelOffset",
  "rotation",
  "alignedAxis",
  "width",
  "height",
  "color",
  "scaleByDistance",
  "translucencyByDistance",
  "pixelOffsetScaleByDistance",
  "imageSubRegion",
  "sizeInMeters",
  "heightReference",
  "distanceDisplayCondition",
  "disableDepthTestDistance"
], zi = {
  onDefinitionChange: "definitionChanged"
}, Ni = l({
  name: "BillboardGraphics",
  create(t, e) {
    if (!t.entity)
      return;
    const i = new zt(e);
    return t.entity.billboard = i, i;
  },
  destroy(t, e) {
    e.entity && (e.entity.billboard = void 0);
  },
  cesiumProps: xi,
  cesiumEventProps: zi
}), gs = Ni, Yi = [
  "heightReference",
  "dimensions",
  "show",
  "fill",
  "material",
  "outline",
  "outlineColor",
  "outlineWidth",
  "shadows",
  "distanceDisplayCondition"
], Ki = {
  onDefinitionChange: "definitionChanged"
}, qi = l({
  name: "BoxGraphics",
  create(t, e) {
    if (!t.entity)
      return;
    const i = new Nt(e);
    return t.entity.box = i, i;
  },
  destroy(t, e) {
    e.entity && (e.entity.box = void 0);
  },
  cesiumProps: Yi,
  cesiumEventProps: Ki
}), Cs = qi, Ji = [
  "position",
  "direction",
  "up",
  "right",
  "frustum",
  "defaultMoveAmount",
  "defaultLookAmount",
  "defaultRotateAmount",
  "defaultZoomAmount",
  "constrainedAxis",
  "maximumZoomFactor",
  "percentageChanged"
], Zi = {
  onChange: "changed",
  onMoveEnd: "moveEnd",
  onMoveStart: "moveStart"
}, Xi = l({
  name: "Camera",
  create: (t) => {
    var e;
    return (e = t.scene) == null ? void 0 : e.camera;
  },
  cesiumProps: Ji,
  cesiumEventProps: Zi,
  setCesiumPropsAfterCreate: !0
}), Ps = Xi, Qi = be(
  "CameraFlyHome",
  (t, { duration: e }) => {
    t.flyHome(e);
  }
), Ss = Qi, en = be(
  "CameraFlyTo",
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  (t, { onComplete: e, onCancel: i, ...o }) => {
    t.flyTo({ ...o, complete: e, cancel: i });
  }
), Es = en, tn = be(
  "CameraLookAt",
  (t, { target: e, offset: i }) => {
    t.lookAt(e, i);
  }
), bs = tn, nn = be(
  "CameraFlyToBoundingSphere",
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  (t, { boundingSphere: e, onComplete: i, onCancel: o, ...r }) => {
    t.flyToBoundingSphere(e, {
      ...r,
      complete: i,
      cancel: o
    });
  }
), ws = nn, on = [
  "show",
  "modelMatrix",
  "shadows",
  "maximumScreenSpaceError",
  "maximumMemoryUsage",
  "cullRequestsWhileMoving",
  "cullRequestsWhileMovingMultiplier",
  "preloadWhenHidden",
  "preloadFlightDestinations",
  "preferLeaves",
  "progressiveResolutionHeightFraction",
  "foveatedScreenSpaceError",
  "foveatedConeSize",
  "foveatedMinimumScreenSpaceErrorRelaxation",
  "foveatedInterpolationCallback",
  "foveatedTimeDelay",
  "dynamicScreenSpaceError",
  "dynamicScreenSpaceErrorDensity",
  "dynamicScreenSpaceErrorFactor",
  "dynamicScreenSpaceErrorHeightFalloff",
  "skipLevelOfDetail",
  "baseScreenSpaceError",
  "skipScreenSpaceErrorFactor",
  "skipLevels",
  "immediatelyLoadDesiredLevelOfDetail",
  "loadSiblings",
  "clippingPlanes",
  "classificationType",
  "ellipsoid",
  "lightColor",
  "colorBlendAmount",
  "colorBlendMode",
  "debugFreezeFrame",
  "debugColorizeTiles",
  "debugWireframe",
  "debugShowBoundingVolume",
  "debugShowContentBoundingVolume",
  "debugShowViewerRequestVolume",
  "debugShowGeometricError",
  "debugShowRenderingStatistics",
  "debugShowMemoryUsage",
  "debugShowUrl",
  "style",
  "backFaceCulling",
  "vectorClassificationOnly",
  "vectorKeepDecodedPositions",
  "splitDirection",
  "customShader",
  "imageBasedLighting",
  "showCreditsOnScreen",
  "featureIdLabel",
  "instanceFeatureIdLabel",
  "imageBasedLighting",
  "outlineColor",
  "cacheBytes",
  "maximumCacheOverflowBytes"
], rn = [
  "showOutline",
  "cullWithChildrenBounds",
  "debugHeatmapTilePropertyName",
  "enableDebugWireframe",
  "modelUpAxis",
  "modelForwardAxis",
  "projectTo2D",
  "enableShowOutline"
], sn = {
  onAllTilesLoad: "allTilesLoaded",
  onInitialTilesLoad: "initialTilesLoaded",
  onLoadProgress: "loadProgress",
  onTileFailed: "tileFailed",
  onTileLoad: "tileLoad",
  onTileUnload: "tileUnload",
  onTileVisible: "tileVisible"
}, an = ["onReady", "onError", "url"], cn = l({
  name: "Cesium3DTileset",
  async create(t, e) {
    var c, u;
    if (!t.primitiveCollection)
      return;
    const i = e.url;
    let o;
    i && typeof i == "object" && typeof i.then == "function" ? o = await i : o = i;
    let r;
    try {
      r = await Yt.fromUrl(o, e), (c = e.onReady) == null || c.call(e, r);
    } catch (y) {
      (u = e.onError) == null || u.call(e, y);
      return;
    }
    return e.colorBlendAmount && (r.colorBlendAmount = e.colorBlendAmount), e.colorBlendMode && (r.colorBlendMode = e.colorBlendMode), e.style && (r.style = e.style), t.primitiveCollection.add(r), r;
  },
  destroy(t, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(t), t.isDestroyed() || t.destroy();
  },
  cesiumProps: on,
  cesiumReadonlyProps: rn,
  cesiumEventProps: sn,
  otherProps: an,
  useCommonEvent: !0
}), Ds = cn, ln = ["show", "uri", "maximumScreenSpaceError"], un = {
  onDefinitionChange: "definitionChanged"
}, dn = l({
  name: "Cesium3DTilesetGraphics",
  create(t, e) {
    if (!t.entity)
      return;
    const i = new Kt(e);
    return t.entity.tileset = i, i;
  },
  destroy(t, e) {
    e.entity && (e.entity.tileset = void 0);
  },
  cesiumProps: ln,
  cesiumEventProps: un
}), Rs = dn, mn = [
  "resolutionScale",
  "useDefaultRenderLoop",
  "targetFrameRate",
  "useBrowserRecommendedResolution",
  "creditDisplay"
], fn = [
  "clock",
  "baseLayer",
  "terrainProvider",
  "skyBox",
  "skyAtmosphere",
  "sceneMode",
  "scene3DOnly",
  "orderIndependentTranslucency",
  "mapMode2D",
  "mapProjection",
  "globe",
  "showRenderLoopErrors",
  "contextOptions",
  "creditContainer",
  "creditViewport",
  "shadows",
  "terrainShadows",
  "terrain",
  "requestRenderMode",
  "maximumRenderTimeChange",
  "msaaSamples",
  "blurActiveElementOnCanvasFocus"
], hn = ["className", "id", "style", "full", "containerProps"], yn = l({
  name: "CesiumWidget",
  create(t, e, i) {
    if (!i)
      return;
    const o = new qt(i, e);
    if (!o)
      return;
    typeof e.resolutionScale == "number" && (o.resolutionScale = e.resolutionScale);
    const r = new Pe(o.scene);
    return [o, r];
  },
  destroy(t, e, i, o) {
    o && !o.isDestroyed() && o.destroy(), t.isDestroyed() || t.destroy();
  },
  provide(t, e, i, o) {
    return {
      cesiumWidget: t,
      scene: t.scene,
      camera: t.scene.camera,
      imageryLayerCollection: t.scene.globe.imageryLayers,
      primitiveCollection: t.scene.primitives,
      globe: t.scene.globe,
      __$internal: {
        onUpdate: i == null ? void 0 : i.onUpdate
      },
      [ne]: o
    };
  },
  containerProps: ({ id: t, className: e, style: i, full: o, containerProps: r }) => ({
    className: e,
    id: t,
    style: {
      ...o ? {
        position: "absolute",
        bottom: "0",
        left: "0",
        right: "0",
        top: "0"
      } : {},
      ...i
    },
    ...r
  }),
  cesiumProps: mn,
  cesiumReadonlyProps: fn,
  otherProps: hn,
  renderContainer: !0,
  useCommonEvent: !0,
  useRootEvent: !0
}), $s = yn, pn = [
  "classificationType",
  "debugShowBoundingVolume",
  "debugShowShadowVolume",
  "show"
], vn = [
  "allowPicking",
  "asynchronous",
  "compressVertices",
  "geometryInstances",
  "interleave",
  "releaseGeometryInstances",
  "vertexCacheOptimize",
  "appearance"
], gn = ["onReady"], Cn = l({
  name: "ClassificationPrimitive",
  async create(t, e) {
    var o;
    if (!t.primitiveCollection)
      return;
    const i = new Jt(e);
    if (e.onReady) {
      const r = () => {
        var c, u;
        i.ready && ((c = e.onReady) == null || c.call(e, i), (u = t.scene) == null || u.postRender.removeEventListener(r));
      };
      (o = t.scene) == null || o.postRender.addEventListener(r);
    }
    return t.primitiveCollection.add(i), i;
  },
  destroy(t, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(t), t.isDestroyed() || t.destroy();
  },
  cesiumProps: pn,
  cesiumReadonlyProps: vn,
  otherProps: gn,
  useCommonEvent: !0
}), Ts = Cn, Pn = {
  onStop: "onStop",
  onTick: "onTick"
}, Sn = [
  "canAnimate",
  "clockRange",
  "clockStep",
  "currentTime",
  "multiplier",
  "shouldAnimate",
  "startTime",
  "stopTime"
], En = l({
  name: "Clock",
  create: (t) => {
    var e;
    return (e = t.cesiumWidget) == null ? void 0 : e.clock;
  },
  cesiumProps: Sn,
  cesiumEventProps: Pn,
  setCesiumPropsAfterCreate: !0
}), Ms = En, bn = [
  "noiseDetail",
  "noiseOffset",
  "show",
  "debugBillboards",
  "debugEllipsoids"
], wn = l({
  name: "CloudCollection",
  create: (t) => {
    if (!t.primitiveCollection)
      return;
    const e = new Zt();
    return t.primitiveCollection.add(e), e;
  },
  destroy(t, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(t), t.isDestroyed() || t.destroy();
  },
  provide: (t) => ({
    cloudCollection: t
  }),
  cesiumProps: bn,
  setCesiumPropsAfterCreate: !0
}), ks = wn, Dn = [
  "positions",
  "width",
  "cornerType",
  "height",
  "heightReference",
  "extrudedHeight",
  "extrudedHeightReference",
  "show",
  "fill",
  "material",
  "outline",
  "outlineColor",
  "outlineWidth",
  "granularity",
  "shadows",
  "distanceDisplayCondition",
  "zIndex",
  "classificationType"
], Rn = {
  onDefinitionChange: "definitionChanged"
}, $n = l({
  name: "CorridorGraphics",
  create(t, e) {
    if (!t.entity)
      return;
    const i = new Xt(e);
    return e.classificationType && (i.classificationType = e.classificationType), t.entity.corridor = i, i;
  },
  destroy(t, e) {
    e.entity && (e.entity.corridor = void 0);
  },
  cesiumProps: Dn,
  cesiumEventProps: Rn
}), _s = $n, Tn = [
  "show",
  "position",
  "scale",
  "maximumSize",
  "slice",
  "brightness",
  "color"
], Mn = l({
  name: "CumulusCloud",
  create: (t, e) => {
    var i;
    return (i = t.cloudCollection) == null ? void 0 : i.add(e);
  },
  destroy(t, e) {
    e.cloudCollection && !e.cloudCollection.isDestroyed() && e.cloudCollection.remove(t);
  },
  cesiumProps: Tn
}), Ls = Mn, kn = ["clustering", "name", "show", "clock", "isLoading"], _n = {
  onChange: "changedEvent",
  onError: "errorEvent",
  onLoading: "loadingEvent"
}, Ln = l({
  name: "CustomDataSource",
  create(t, e) {
    if (!t.dataSourceCollection)
      return;
    const i = new Qt(e.name);
    return e.clustering && (i.clustering = e.clustering), typeof e.show == "boolean" && (i.show = e.show), typeof e.clock < "u" && (i.clock = e.clock), t.dataSourceCollection.add(i), i;
  },
  destroy(t, e) {
    e.dataSourceCollection && !e.dataSourceCollection.isDestroyed() && e.dataSourceCollection.remove(t);
  },
  provide(t) {
    return {
      entityCollection: t.entities,
      dataSource: t
    };
  },
  cesiumProps: kn,
  cesiumEventProps: _n,
  useCommonEvent: !0
}), Os = Ln, On = [
  "heightReference",
  "length",
  "topRadius",
  "bottomRadius",
  "show",
  "fill",
  "material",
  "outline",
  "outlineColor",
  "outlineWidth",
  "numberOfVerticalLines",
  "slices",
  "distanceDisplayCondition",
  "shadows"
], Gn = {
  onDefinitionChange: "definitionChanged"
}, Bn = l({
  name: "CylinderGraphics",
  create(t, e) {
    if (!t.entity)
      return;
    const i = new ei(e);
    return t.entity.cylinder = i, i;
  },
  destroy(t, e) {
    e.entity && (e.entity.cylinder = void 0);
  },
  cesiumProps: On,
  cesiumEventProps: Gn
}), Gs = Bn, An = ["clustering", "show"], Fn = ["name", "sourceUri", "credit"], In = {
  onChange: "changedEvent",
  onError: "errorEvent",
  onLoading: "loadingEvent"
}, Wn = ["onLoad", "data"], rt = (t, { data: e, onLoad: i, ...o }) => {
  e && t.load(e, o).then((r) => {
    i && i(r);
  });
}, Vn = l({
  name: "CzmlDataSource",
  create(t, e) {
    if (!t.dataSourceCollection)
      return;
    const i = new ti(e.name);
    return e.clustering && (i.clustering = e.clustering), typeof e.show == "boolean" && (i.show = e.show), t.dataSourceCollection.add(i), e.data && rt(i, e), i;
  },
  update(t, e, i) {
    e.data ? i.show !== e.show && (t.show = typeof e.show == "boolean" ? e.show : !0) : t.show = !1, e.data && (i.data !== e.data || i.sourceUri !== e.sourceUri || i.credit !== e.credit) && rt(t, e);
  },
  destroy(t, e) {
    e.dataSourceCollection && !e.dataSourceCollection.isDestroyed() && e.dataSourceCollection.remove(t);
  },
  provide(t) {
    return {
      dataSource: t
    };
  },
  cesiumProps: An,
  cesiumReadonlyProps: Fn,
  cesiumEventProps: In,
  otherProps: Wn,
  useCommonEvent: !0
}), Bs = Vn, Un = [
  "semiMajorAxis",
  "semiMinorAxis",
  "height",
  "heightReference",
  "extrudedHeight",
  "show",
  "fill",
  "material",
  "outline",
  "outlineColor",
  "outlineWidth",
  "numberOfVerticalLines",
  "rotation",
  "stRotation",
  "granularity",
  "shadows",
  "distanceDisplayCondition",
  "zIndex",
  "classificationType",
  "extrudedHeightReference"
], jn = {
  onDefinitionChange: "definitionChanged"
}, Hn = l({
  name: "EllipseGraphics",
  create(t, e) {
    if (!t.entity)
      return;
    const i = new ii(e);
    return t.entity.ellipse = i, i;
  },
  destroy(t, e) {
    e.entity && (e.entity.ellipse = void 0);
  },
  cesiumProps: Un,
  cesiumEventProps: jn
}), As = Hn, xn = [
  "heightReference",
  "radii",
  "show",
  "fill",
  "innerRadii",
  "material",
  "maximumClock",
  "maximumCone",
  "minimumClock",
  "minimumCone",
  "outline",
  "outlineColor",
  "outlineWidth",
  "subdivisions",
  "stackPartitions",
  "slicePartitions",
  "shadows",
  "distanceDisplayCondition"
], zn = {
  onDefinitionChange: "definitionChanged"
}, Nn = l({
  name: "EllipsoidGraphics",
  create(t, e) {
    if (!t.entity)
      return;
    const i = new ni(e);
    return t.entity.ellipsoid = i, i;
  },
  destroy(t, e) {
    e.entity && (e.entity.ellipsoid = void 0);
  },
  cesiumProps: xn,
  cesiumEventProps: zn
}), Fs = Nn, Yn = [
  "availability",
  "billboard",
  "box",
  "corridor",
  "cylinder",
  "description",
  "ellipse",
  "ellipsoid",
  "entityCollection",
  "label",
  "model",
  "name",
  "orientation",
  "path",
  "plane",
  "parent",
  "point",
  "polygon",
  "polyline",
  "polylineVolume",
  "position",
  "properties",
  "rectangle",
  "show",
  "tileset",
  "viewFrom",
  "wall"
], Kn = ["id"], qn = {
  onDefinitionChange: "definitionChanged"
}, Jn = ["selected", "tracked"], Zn = l({
  name: "Entity",
  create(t, e) {
    if (!t.entityCollection)
      return;
    const i = new oi(e);
    return t.viewer && e.selected && (t.viewer.selectedEntity = i), t.viewer && e.tracked && (t.viewer.trackedEntity = i), t.entityCollection.add(i), i;
  },
  destroy(t, e) {
    e.entityCollection && e.entityCollection.remove(t);
  },
  update(t, e, i, o) {
    o.viewer && (e.selected !== i.selected && (e.selected ? o.viewer.selectedEntity = t : o.viewer.selectedEntity === t && (o.viewer.selectedEntity = void 0)), e.tracked !== i.tracked && (e.tracked ? o.viewer.trackedEntity = t : o.viewer.trackedEntity === t && (o.viewer.trackedEntity = void 0)));
  },
  provide(t) {
    return {
      entity: t
    };
  },
  cesiumProps: Yn,
  cesiumReadonlyProps: Kn,
  cesiumEventProps: qn,
  otherProps: Jn,
  useCommonEvent: !0
}), Is = Zn, Xn = ({
  children: t,
  container: e,
  resizeInfoBox: i = !0
}) => {
  const { viewer: o, entity: r } = Ee(), [c, u] = ut(!1), y = Ht(
    () => {
      var m;
      return e ?? ((m = o == null ? void 0 : o.infoBox.frame.contentDocument) == null ? void 0 : m.createElement("div"));
    },
    [e, o == null ? void 0 : o.infoBox.frame.contentDocument]
  );
  return oe(() => {
    if (!o || !r)
      return;
    const m = (E) => {
      u(!!E && E.id === r.id);
    };
    return o.selectedEntityChanged.addEventListener(m), () => {
      o.selectedEntityChanged.removeEventListener(m);
    };
  }, [r, o]), oe(() => {
    var T, k;
    if (e || !y || !o)
      return;
    const m = (T = o.infoBox) == null ? void 0 : T.frame, E = (k = m == null ? void 0 : m.contentDocument) == null ? void 0 : k.querySelector(".cesium-infoBox-description");
    if (!m || !E)
      return;
    let g;
    if (c) {
      if (i) {
        const p = E.getBoundingClientRect().height;
        m.style.height = p + "px", g = window.setInterval(() => {
          const _ = o.infoBox.container.querySelector(
            ".cesium-infoBox.cesium-infoBox-bodyless.cesium-infoBox-visible"
          );
          _ && (clearInterval(g), g = void 0, E.appendChild(y), _.classList.remove("cesium-infoBox-bodyless"), m.style.height = E.getBoundingClientRect().height + "px");
        }, 10);
      }
    } else
      y.parentElement === E && E.removeChild(y);
    return g ? () => clearTimeout(g) : void 0;
  }, [y, e, i, c, o]), y ? ki(!e || c ? t : null, y) : null;
}, Ws = Xn, Qn = [
  "density",
  "enabled",
  "minimumBrightness",
  "screenSpaceErrorFactor",
  "renderable"
], eo = l({
  name: "Fog",
  create(t) {
    if (!t.scene)
      return;
    const e = new Qe();
    return t.scene.fog = e, e;
  },
  destroy(t, e) {
    e.scene && !e.scene.isDestroyed() && (e.scene.fog = new Qe());
  },
  cesiumProps: Qn,
  setCesiumPropsAfterCreate: !0
}), Vs = eo, to = ["clustering", "name", "show"], io = [
  "clampToGround",
  "sourceUri",
  "credit",
  "markerSize",
  "markerSymbol",
  "markerColor",
  "stroke",
  "strokeWidth",
  "fill",
  "describe"
], no = {
  onChange: "changedEvent",
  onError: "errorEvent",
  onLoading: "loadingEvent"
}, oo = ["onLoad", "data"], st = (t, { data: e, onLoad: i, ...o }) => {
  e && t.load(e, o).then((r) => {
    i && i(r);
  });
}, ro = l({
  name: "GeoJsonDataSource",
  create(t, e) {
    if (!t.dataSourceCollection)
      return;
    const i = new ri(e.name);
    return e.clustering && (i.clustering = e.clustering), typeof e.show == "boolean" && (i.show = e.show), t.dataSourceCollection.add(i), e.data && st(i, e), i;
  },
  update(t, e, i) {
    e.data ? i.show !== e.show && (t.show = typeof e.show == "boolean" ? e.show : !0) : t.show = !1, e.data && (i.data !== e.data || i.clampToGround !== e.clampToGround || i.sourceUri !== e.sourceUri || i.credit !== e.credit || i.markerSize !== e.markerSize || i.markerSymbol !== e.markerSymbol || i.markerColor !== e.markerColor || i.stroke !== e.stroke || i.strokeWidth !== e.strokeWidth || i.fill !== e.fill) && st(t, e);
  },
  destroy(t, e) {
    e.dataSourceCollection && !e.dataSourceCollection.isDestroyed() && e.dataSourceCollection.remove(t);
  },
  provide(t) {
    return {
      dataSource: t
    };
  },
  cesiumProps: to,
  cesiumReadonlyProps: io,
  cesiumEventProps: no,
  otherProps: oo,
  useCommonEvent: !0
}), Us = ro, so = {
  onImageryLayersUpdate: "imageryLayersUpdatedEvent",
  onTerrainProviderChange: "terrainProviderChanged",
  onTileLoadProgress: "tileLoadProgressEvent"
}, ao = [
  "atmosphereBrightnessShift",
  "atmosphereHueShift",
  "atmosphereSaturationShift",
  "backFaceCulling",
  "baseColor",
  "clippingPlanes",
  "depthTestAgainstTerrain",
  "enableLighting",
  "lightingFadeInDistance",
  "lightingFadeOutDistance",
  "material",
  "maximumScreenSpaceError",
  "nightFadeInDistance",
  "nightFadeOutDistance",
  "oceanNormalMapUrl",
  "shadows",
  "show",
  "showGroundAtmosphere",
  "showWaterEffect",
  "tileCacheSize",
  "loadingDescendantLimit",
  "preloadAncestors",
  "preloadSiblings",
  "fillHighlightColor",
  "dynamicAtmosphereLighting",
  "dynamicAtmosphereLightingFromSun",
  "showSkirts",
  "cartographicLimitRectangle",
  "translucency",
  "undergroundColor",
  "undergroundColorAlphaByDistance",
  "terrainExaggeration",
  "terrainExaggerationRelativeHeight",
  "lambertDiffuseMultiplier",
  "atmosphereLightIntensity",
  "atmosphereRayleighCoefficient",
  "atmosphereMieCoefficient",
  "atmosphereRayleighScaleHeight",
  "atmosphereMieScaleHeight",
  "atmosphereMieAnisotropy",
  "vertexShadowDarkness"
], co = ["terrainProvider"], lo = l({
  name: "Globe",
  create: (t) => {
    var e;
    return (e = t.scene) == null ? void 0 : e.globe;
  },
  update: async (t, e) => {
    const i = e.terrainProvider;
    let o;
    i && typeof i == "object" && typeof i.then == "function" ? o = await i : o = i, t.terrainProvider = o;
  },
  cesiumProps: ao,
  cesiumEventProps: so,
  otherProps: co,
  setCesiumPropsAfterCreate: !0
}), js = lo, uo = [
  "appearance",
  "classificationType",
  "debugShowBoundingVolume",
  "debugShowShadowVolume",
  "show"
], mo = [
  "allowPicking",
  "asynchronous",
  "geometryInstances",
  "interleave",
  "releaseGeometryInstances"
], fo = ["onReady"], ho = l({
  name: "GroundPolylinePrimitive",
  create(t, e) {
    var o;
    if (!t.primitiveCollection)
      return;
    const i = new si(e);
    if (e.onReady) {
      const r = () => {
        var c, u;
        i.ready && ((c = e.onReady) == null || c.call(e, i), (u = t.scene) == null || u.postRender.removeEventListener(r));
      };
      (o = t.scene) == null || o.postRender.addEventListener(r);
    }
    return t.primitiveCollection.add(i), i;
  },
  destroy(t, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(t), t.isDestroyed() || t.destroy();
  },
  cesiumProps: uo,
  cesiumReadonlyProps: mo,
  otherProps: fo,
  useCommonEvent: !0
}), Hs = ho, yo = [
  "appearance",
  "classificationType",
  "debugShowBoundingVolume",
  "debugShowShadowVolume",
  "show"
], po = [
  "allowPicking",
  "asynchronous",
  "compressVertices",
  "geometryInstances",
  "interleave",
  "releaseGeometryInstances",
  "vertexCacheOptimize"
], vo = ["onReady"], go = l({
  name: "GroundPrimitive",
  create(t, e) {
    var o;
    if (!t.primitiveCollection)
      return;
    const i = new ai(e);
    if (e.onReady) {
      const r = () => {
        var c, u;
        i.ready && ((c = e.onReady) == null || c.call(e, i), (u = t.scene) == null || u.postRender.removeEventListener(r));
      };
      (o = t.scene) == null || o.postRender.addEventListener(r);
    }
    return t.primitiveCollection.add(i), i;
  },
  destroy(t, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(t), t.isDestroyed() || t.destroy();
  },
  cesiumProps: yo,
  cesiumReadonlyProps: po,
  otherProps: vo,
  useCommonEvent: !0
}), xs = go, Co = ["show", "destroyPrimitives"], Po = l({
  name: "GroundPrimitiveCollection",
  create: (t) => {
    var e;
    return (e = t.scene) == null ? void 0 : e.groundPrimitives;
  },
  provide: (t) => ({
    primitiveCollection: t
  }),
  cesiumProps: Co,
  setCesiumPropsAfterCreate: !0
}), zs = Po, So = [
  "alpha",
  "brightness",
  "contrast",
  "hue",
  "saturation",
  "gamma",
  "splitDirection",
  "minificationFilter",
  "magnificationFilter",
  "cutoutRectangle",
  "show",
  "nightAlpha",
  "dayAlpha",
  "colorToAlpha",
  "colorToAlphaThreshold",
  "index"
], Eo = [
  "rectangle",
  "maximumAnisotropy",
  "minimumTerrainLevel",
  "maximumTerrainLevel",
  "readyEvent"
], bo = ["imageryProvider"], wo = l({
  name: "ImageryLayer",
  async create(t, e) {
    if (!t.imageryLayerCollection)
      return;
    const i = e.imageryProvider;
    let o;
    i && typeof i == "object" && typeof i.then == "function" ? o = await i : o = i;
    const r = new ci(o, e);
    return t.imageryLayerCollection.add(r, e.index), r;
  },
  destroy(t, e) {
    e.imageryLayerCollection && e.imageryLayerCollection.remove(t);
  },
  cesiumProps: So,
  cesiumReadonlyProps: Eo,
  otherProps: bo
}), Ns = wo, Do = {
  onLayerAdd: "layerAdded",
  onLayerMove: "layerMoved",
  onLayerRemove: "layerRemoved",
  onLayerShowOrHide: "layerShownOrHidden"
}, Ro = l({
  name: "ImageryLayerCollection",
  create: (t) => {
    var e;
    return (e = t.globe) == null ? void 0 : e.imageryLayers;
  },
  cesiumEventProps: Do
}), Ys = Ro, $o = ["clustering", "name", "show"], To = [
  "canvas",
  "camera",
  "ellipsoid",
  "clampToGround",
  "sourceUri",
  "credit",
  "screenOverlayContainer"
], Mo = {
  onChange: "changedEvent",
  onError: "errorEvent",
  onLoading: "loadingEvent",
  onRefresh: "refreshEvent",
  onUnsupportedNode: "unsupportedNodeEvent"
}, ko = ["onLoad", "data"], at = (t, { data: e, onLoad: i, ...o }) => {
  e && t.load(e, o).then((r) => {
    i && i(r);
  });
}, _o = l({
  name: "KmlDataSource",
  create(t, e) {
    if (!t.scene || !t.dataSourceCollection || !t.scene)
      return;
    const i = new li({
      camera: e.camera || t.scene.camera,
      canvas: e.canvas || t.scene.canvas,
      ellipsoid: e.ellipsoid,
      credit: e.credit
    });
    return e.clustering && (i.clustering = e.clustering), typeof e.show == "boolean" && (i.show = e.show), typeof e.name < "u" && (i.name = e.name), t.dataSourceCollection.add(i), e.data && at(i, e), i;
  },
  update(t, e, i) {
    e.data ? i.show !== e.show && (t.show = typeof e.show == "boolean" ? e.show : !0) : t.show = !1, e.data && (i.data !== e.data || i.clampToGround !== e.clampToGround || i.ellipsoid !== e.ellipsoid || i.sourceUri !== e.sourceUri || i.credit !== e.credit) && at(t, e);
  },
  destroy(t, e) {
    e.dataSourceCollection && !e.dataSourceCollection.isDestroyed() && e.dataSourceCollection.remove(t);
  },
  provide(t) {
    return {
      dataSource: t
    };
  },
  cesiumProps: $o,
  cesiumReadonlyProps: To,
  cesiumEventProps: Mo,
  otherProps: ko,
  useCommonEvent: !0
}), Ks = _o, Lo = [
  "backgroundColor",
  "backgroundPadding",
  "disableDepthTestDistance",
  "distanceDisplayCondition",
  "eyeOffset",
  "fillColor",
  "font",
  "heightReference",
  "horizontalOrigin",
  "id",
  "outlineColor",
  "outlineWidth",
  "pixelOffset",
  "pixelOffsetScaleByDistance",
  "position",
  "scale",
  "scaleByDistance",
  "show",
  "showBackground",
  "style",
  "text",
  "translucencyByDistance",
  "verticalOrigin"
], Oo = l({
  name: "Label",
  create: (t, e) => {
    var i;
    return (i = t.labelCollection) == null ? void 0 : i.add(e);
  },
  destroy(t, e) {
    e.labelCollection && !e.labelCollection.isDestroyed() && e.labelCollection.remove(t);
  },
  cesiumProps: Lo,
  useCommonEvent: !0
}), qs = Oo, Go = ["blendOption", "debugShowBoundingVolume", "modelMatrix", "show"], Bo = l({
  name: "LabelCollection",
  create(t, e) {
    if (!t.scene || !t.primitiveCollection)
      return;
    const i = new ui({
      scene: t.scene,
      modelMatrix: e.modelMatrix,
      blendOption: e.blendOption,
      debugShowBoundingVolume: e.debugShowBoundingVolume
    });
    return t.primitiveCollection.add(i), i;
  },
  destroy(t, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(t), t.isDestroyed() || t.destroy();
  },
  provide(t) {
    return {
      labelCollection: t
    };
  },
  cesiumProps: Go
}), Js = Bo, Ao = [
  "text",
  "font",
  "style",
  "fillColor",
  "outlineColor",
  "outlineWidth",
  "show",
  "showBackground",
  "backgroundColor",
  "backgroundPadding",
  "scale",
  "horizontalOrigin",
  "verticalOrigin",
  "eyeOffset",
  "pixelOffset",
  "translucencyByDistance",
  "pixelOffsetScaleByDistance",
  "scaleByDistance",
  "heightReference",
  "distanceDisplayCondition",
  "disableDepthTestDistance"
], Fo = {
  onDefinitionChange: "definitionChanged"
}, Io = l({
  name: "LabelGraphics",
  create(t, e) {
    if (!t.entity)
      return;
    const i = new di(e);
    return t.entity.label = i, i;
  },
  destroy(t, e) {
    e.entity && (e.entity.label = void 0);
  },
  cesiumProps: Ao,
  cesiumEventProps: Fo
}), Zs = Io, Wo = [
  "backFaceCulling",
  "clampAnimations",
  "clippingPlanes",
  "color",
  "colorBlendAmount",
  "colorBlendMode",
  "customShader",
  "debugShowBoundingVolume",
  "debugWireframe",
  "distanceDisplayCondition",
  "featureIdLabel",
  "heightReference",
  "id",
  "imageBasedLighting",
  "instanceFeatureIdLabel",
  "lightColor",
  "maximumScale",
  "minimumPixelSize",
  "modelMatrix",
  "outlineColor",
  "scale",
  "shadows",
  "show",
  "showCreditsOnScreen",
  "showOutline",
  "silhouetteColor",
  "silhouetteSize",
  "splitDirection",
  "style"
], Vo = [
  "allowPicking",
  "asynchronous",
  "basePath",
  "credit",
  "enableDebugWireframe",
  "gltf",
  "heightReference",
  "incrementallyLoadTextures",
  "scene",
  "releaseGltfJson",
  "cull",
  "opaquePass",
  "upAxis",
  "forwardAxis",
  "content",
  "scene",
  "enableShowOutline",
  "projectTo2D",
  "classificationType",
  "errorEvent",
  "readyEvent",
  "texturesReadyEvent",
  "gltfCallback"
], Uo = ["onReady", "onError", "url"], jo = l({
  name: "Model",
  async create(t, { scene: e, url: i, colorBlendMode: o, ...r }) {
    var m;
    if (!t.scene || !t.primitiveCollection || !i)
      return;
    const c = i;
    let u;
    c && typeof c == "object" && typeof c.then == "function" ? u = await c : u = c;
    let y;
    try {
      y = await mi.fromGltfAsync({
        ...r,
        url: u,
        colorBlendMode: o,
        scene: e || t.scene
      });
    } catch (E) {
      (m = r.onError) == null || m.call(r, E);
      return;
    }
    return t.primitiveCollection.add(y), y;
  },
  destroy(t, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(t), t.isDestroyed() || t.destroy();
  },
  cesiumEventProps: {
    onReady: "readyEvent"
  },
  cesiumProps: Wo,
  cesiumReadonlyProps: Vo,
  otherProps: Uo,
  useCommonEvent: !0
}), Xs = jo, Ho = [
  "uri",
  "show",
  "scale",
  "minimumPixelSize",
  "maximumScale",
  "incrementallyLoadTextures",
  "runAnimations",
  "clampAnimations",
  "nodeTransformations",
  "shadows",
  "heightReference",
  "distanceDisplayCondition",
  "silhouetteColor",
  "silhouetteSize",
  "color",
  "colorBlendMode",
  "colorBlendAmount",
  "clippingPlanes",
  "imageBasedLightingFactor",
  "lightColor",
  "articulations",
  "customShader"
], xo = {
  onDefinitionChange: "definitionChanged"
}, zo = l({
  name: "ModelGraphics",
  create(t, e) {
    if (!t.entity)
      return;
    const i = new fi(e);
    return t.entity.model = i, i;
  },
  destroy(t, e) {
    e.entity && (e.entity.model = void 0);
  },
  cesiumProps: Ho,
  cesiumEventProps: xo
}), Qs = zo, No = ["onlySunLighting", "show", "textureUrl"], Yo = ["ellipsoid"], Ko = l({
  name: "Moon",
  create(t, e) {
    if (!t.scene)
      return;
    const i = new et(e);
    return t.scene.moon = i, i;
  },
  destroy(t, e) {
    e.scene && !e.scene.isDestroyed() && (e.scene.moon = new et());
  },
  cesiumProps: No,
  cesiumReadonlyProps: Yo
}), ea = Ko, qo = [
  "show",
  "emitter",
  "modelMatrix",
  "emitterModelMatrix",
  "emissionRate",
  "bursts",
  "loop",
  "startScale",
  "endScale",
  "startColor",
  "endColor",
  "image",
  "imageSize",
  "minimumImageSize",
  "maximumImageSize",
  "speed",
  "minimumSpeed",
  "maximumSpeed",
  "lifetime",
  "particleLife",
  "minimumParticleLife",
  "maximumParticleLife",
  "mass",
  "minimumMass",
  "maximumMass",
  "sizeInMeters"
], Jo = {
  onComplete: "complete",
  onUpdate: "updateCallback"
}, Zo = l({
  name: "ParticleSystem",
  create(t, e) {
    if (!t.primitiveCollection)
      return;
    const i = new hi({ ...e, updateCallback: e.onUpdate });
    return t.primitiveCollection.add(i), i;
  },
  update(t, e, i) {
    e.onUpdate !== i.onUpdate && (t.updateCallback = e.onUpdate);
  },
  destroy(t, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(t);
  },
  cesiumProps: qo,
  cesiumEventProps: Jo
}), ta = Zo, Xo = [
  "leadTime",
  "trailTime",
  "show",
  "width",
  "material",
  "resolution",
  "distanceDisplayCondition"
], Qo = {
  onDefinitionChange: "definitionChanged"
}, er = l({
  name: "PathGraphics",
  create(t, e) {
    if (!t.entity)
      return;
    const i = new yi(e);
    return t.entity.path = i, i;
  },
  destroy(t, e) {
    e.entity && (e.entity.path = void 0);
  },
  cesiumProps: Xo,
  cesiumEventProps: Qo
}), ia = er, tr = [
  "plane",
  "dimensions",
  "show",
  "fill",
  "material",
  "outline",
  "outlineColor",
  "outlineWidth",
  "shadows",
  "distanceDisplayCondition"
], ir = {
  onDefinitionChange: "definitionChanged"
}, nr = l({
  name: "PlaneGraphics",
  create(t, e) {
    if (!t.entity)
      return;
    const i = new pi(e);
    return t.entity.plane = i, i;
  },
  destroy(t, e) {
    e.entity && (e.entity.plane = void 0);
  },
  cesiumProps: tr,
  cesiumEventProps: ir
}), na = nr, or = [
  "color",
  "pixelSize",
  "outlineColor",
  "outlineWidth",
  "show",
  "scaleByDistance",
  "translucencyByDistance",
  "heightReference",
  "distanceDisplayCondition",
  "disableDepthTestDistance"
], rr = {
  onDefinitionChange: "definitionChanged"
}, sr = l({
  name: "PointGraphics",
  create(t, e) {
    if (!t.entity)
      return;
    const i = new vi(e);
    return t.entity.point = i, i;
  },
  destroy(t, e) {
    e.entity && (e.entity.point = void 0);
  },
  cesiumProps: or,
  cesiumEventProps: rr
}), oa = sr, ar = [
  "color",
  "disableDepthTestDistance",
  "distanceDisplayCondition",
  "id",
  "outlineColor",
  "outlineWidth",
  "pixelSize",
  "position",
  "scaleByDistance",
  "show",
  "translucencyByDistance"
], cr = l({
  name: "PointPrimitive",
  create: (t, e) => {
    var i;
    return (i = t.pointPrimitiveCollection) == null ? void 0 : i.add(e);
  },
  destroy(t, e) {
    e.pointPrimitiveCollection && !e.pointPrimitiveCollection.isDestroyed() && e.pointPrimitiveCollection.remove(t);
  },
  cesiumProps: ar,
  useCommonEvent: !0
}), ra = cr, lr = ["blendOption", "debugShowBoundingVolume", "modelMatrix", "show"], ur = l({
  name: "PointPrimitveCollection",
  create(t, e) {
    if (!t.primitiveCollection)
      return;
    const i = new gi(e);
    return t.primitiveCollection.add(i), i;
  },
  destroy(t, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(t), t.isDestroyed() || t.destroy();
  },
  provide(t) {
    return {
      pointPrimitiveCollection: t
    };
  },
  cesiumProps: lr
}), sa = ur, dr = [
  "arcType",
  "hierarchy",
  "height",
  "heightReference",
  "extrudedHeight",
  "extrudedHeightReference",
  "show",
  "fill",
  "material",
  "outline",
  "outlineColor",
  "outlineWidth",
  "stRotation",
  "granularity",
  "perPositionHeight",
  "closeTop",
  "closeBottom",
  "shadows",
  "distanceDisplayCondition",
  "zIndex",
  "classificationType",
  "textureCoordinates"
], mr = {
  onDefinitionChange: "definitionChanged"
}, fr = l({
  name: "PolygonGraphics",
  create(t, e) {
    if (!t.entity)
      return;
    const i = new Ci(e);
    return t.entity.polygon = i, i;
  },
  destroy(t, e) {
    e.entity && (e.entity.polygon = void 0);
  },
  cesiumProps: dr,
  cesiumEventProps: mr
}), aa = fr, hr = [
  "distanceDisplayCondition",
  "id",
  "loop",
  "material",
  "positions",
  "show",
  "width"
], yr = l({
  name: "Polyline",
  create: (t, e) => {
    var i;
    return (i = t.polylineCollection) == null ? void 0 : i.add(e);
  },
  destroy(t, e) {
    e.polylineCollection && !e.polylineCollection.isDestroyed() && e.polylineCollection.remove(t);
  },
  cesiumProps: hr,
  useCommonEvent: !0
}), ca = yr, pr = ["debugShowBoundingVolume", "length", "modelMatrix", "show"], vr = l(
  {
    name: "PolylineCollection",
    create(t, e) {
      if (!t.primitiveCollection)
        return;
      const i = new Pi({
        modelMatrix: e.modelMatrix,
        debugShowBoundingVolume: e.debugShowBoundingVolume,
        length: e.length,
        scene: t.scene
      });
      return t.primitiveCollection.add(i), i;
    },
    destroy(t, e) {
      e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(t), t.isDestroyed() || t.destroy();
    },
    provide(t) {
      return {
        polylineCollection: t
      };
    },
    cesiumProps: pr
  }
), la = vr, gr = [
  "arcType",
  "classificationType",
  "positions",
  "clampToGround",
  "width",
  "show",
  "material",
  "depthFailMaterial",
  "granularity",
  "shadows",
  "distanceDisplayCondition",
  "zIndex"
], Cr = {
  onDefinitionChange: "definitionChanged"
}, Pr = l({
  name: "PolylineGraphics",
  create(t, e) {
    if (!t.entity)
      return;
    const i = new Si(e);
    return t.entity.polyline = i, i;
  },
  destroy(t, e) {
    e.entity && (e.entity.polyline = void 0);
  },
  cesiumProps: gr,
  cesiumEventProps: Cr
}), ua = Pr, Sr = [
  "positions",
  "shape",
  "cornerType",
  "show",
  "fill",
  "material",
  "outline",
  "outlineColor",
  "outlineWidth",
  "granularity",
  "shadows",
  "distanceDisplayCondition"
], Er = {
  onDefinitionChange: "definitionChanged"
}, br = l({
  name: "PolylineVolumeGraphics",
  create(t, e) {
    if (!t.entity)
      return;
    const i = new Ei(e);
    return t.entity.polylineVolume = i, i;
  },
  destroy(t, e) {
    e.entity && (e.entity.polylineVolume = void 0);
  },
  cesiumProps: Sr,
  cesiumEventProps: Er
}), da = br, wr = ["enabled", "selected"], Dr = [
  "clearColor",
  "forcePowerOfTwo",
  "fragmentShader",
  "name",
  "pixelDatatype",
  "pixelFormat",
  "sampleMode",
  "scissorRectangle",
  "textureScale",
  "uniforms"
], ma = l({
  name: "PostProcessStage",
  create(t, e) {
    if (!t.scene)
      return;
    const i = new bi(e);
    return typeof e.enabled == "boolean" && (i.enabled = e.enabled), e.selected && (i.selected = e.selected), t.scene.postProcessStages.add(i), i;
  },
  destroy(t, e) {
    e.scene && !e.scene.isDestroyed() && e.scene.postProcessStages.remove(t), t.isDestroyed() || t.destroy();
  },
  cesiumProps: wr,
  cesiumReadonlyProps: Dr
}), fa = F({
  name: "BlackAndWhiteStage",
  props: ["gradations"],
  create: () => N.createBlackAndWhiteStage()
}), ha = F({
  name: "BrightnessStage",
  props: ["brightness"],
  create: () => N.createBrightnessStage()
}), ya = F({
  name: "LensFlareStage",
  props: [
    "dirtTexture",
    "starTexture",
    "intensity",
    "distortion",
    "ghostDispersal",
    "haloWidth",
    "earthRadius"
  ],
  create: () => N.createLensFlareStage()
}), pa = F({
  name: "Fxaa",
  create: (t, e) => e.fxaa,
  props: []
}), va = F({
  name: "NightVisionStage",
  props: [],
  create: () => N.createNightVisionStage()
}), Rr = ["enabled", "selected"], $r = ["inputPreviousStageTexture", "name", "stages", "uniforms"], ga = l({
  name: "PostProcessStageComposite",
  create(t, e) {
    if (!t.scene)
      return;
    const i = new wi(e);
    return typeof e.enabled == "boolean" && (i.enabled = e.enabled), e.selected && (i.selected = e.selected), t.scene.postProcessStages.add(i), i;
  },
  destroy(t, e) {
    e.scene && !e.scene.isDestroyed() && e.scene.postProcessStages.remove(t), t.isDestroyed() || t.destroy();
  },
  cesiumProps: Rr,
  cesiumReadonlyProps: $r
}), Ca = F({
  name: "AmbientOcclusion",
  create: (t, e) => e.ambientOcclusion,
  props: [
    "ambientOcclusionOnly",
    "bias",
    "delta",
    "frustumLength",
    "intensity",
    "lengthCap",
    "sigma",
    "stepSize"
  ],
  noMount: !0
}), Pa = F({
  name: "Bloom",
  create: (t, e) => e.bloom,
  props: ["brightness", "contrast", "delta", "glowOnly", "sigma", "stepSize"],
  noMount: !0
}), Sa = F({
  name: "BlurStage",
  props: ["delta", "sigma", "stepSize"],
  create: () => N.createBlurStage()
}), Ea = F({
  name: "DepthOfFieldStage",
  props: ["delta", "focalDistance", "sigma", "stepSize"],
  create: () => N.createDepthOfFieldStage()
}), ba = F({
  name: "EdgeDetectionStage",
  props: ["color", "length"],
  create: () => N.createEdgeDetectionStage()
}), wa = F({
  name: "SilhouetteStage",
  props: ["color", "length"],
  create: () => N.createSilhouetteStage()
}), Tr = [
  "appearance",
  "cull",
  "debugShowBoundingVolume",
  "depthFailAppearance",
  "modelMatrix",
  "shadows",
  "show"
], Mr = [
  "allowPicking",
  "asynchronous",
  "compressVertices",
  "geometryInstances",
  "interleave",
  "releaseGeometryInstances",
  "vertexCacheOptimize"
], kr = ["onReady"], _r = l({
  name: "Primitive",
  create(t, e) {
    var o;
    if (!t.primitiveCollection)
      return;
    const i = new Di(e);
    if (e.onReady) {
      const r = () => {
        var c, u;
        i.ready && ((c = e.onReady) == null || c.call(e, i), (u = t.scene) == null || u.postRender.removeEventListener(r));
      };
      (o = t.scene) == null || o.postRender.addEventListener(r);
    }
    return t.primitiveCollection.add(i), i;
  },
  destroy(t, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(t), t.isDestroyed() || t.destroy();
  },
  cesiumProps: Tr,
  cesiumReadonlyProps: Mr,
  otherProps: kr,
  useCommonEvent: !0
}), Da = _r, Lr = [
  "classificationType",
  "coordinates",
  "height",
  "heightReference",
  "extrudedHeight",
  "extrudedHeightReference",
  "show",
  "fill",
  "material",
  "outline",
  "outlineColor",
  "outlineWidth",
  "rotation",
  "stRotation",
  "granularity",
  "shadows",
  "distanceDisplayCondition",
  "zIndex"
], Or = {
  onDefinitionChange: "definitionChanged"
}, Gr = l({
  name: "RectangleGraphics",
  create(t, e) {
    if (!t.entity)
      return;
    const i = new Ri(e);
    return t.entity.rectangle = i, i;
  },
  destroy(t, e) {
    e.entity && (e.entity.rectangle = void 0);
  },
  cesiumProps: Lr,
  cesiumEventProps: Or
}), Ra = Gr, Br = [
  "backgroundColor",
  "completeMorphOnUserInput",
  "debugCommandFilter",
  "debugShowCommands",
  "debugShowDepthFrustum",
  "debugShowFramesPerSecond",
  "debugShowFrustumPlanes",
  "debugShowFrustums",
  "eyeSeparation",
  "farToNearRatio",
  "focalLength",
  "fog",
  "gamma",
  "globe",
  "highDynamicRange",
  "invertClassification",
  "invertClassificationColor",
  "light",
  "logarithmicDepthBuffer",
  "logarithmicDepthFarToNearRatio",
  "maximumRenderTimeChange",
  "minimumDisableDepthTestDistance",
  // "mode", // enable morph with animation
  "moon",
  "morphTime",
  "nearToFarDistance2D",
  "pickTranslucentDepth",
  "requestRenderMode",
  "rethrowRenderErrors",
  "shadowMap",
  "skyAtmosphere",
  "skyBox",
  "specularEnvironmentMaps",
  "sphericalHarmonicCoefficients",
  "sun",
  "sunBloom",
  "terrainProvider",
  "useDepthPicking",
  "useWebVR",
  "postProcessStages",
  "msaaSamples",
  "splitPosition",
  "debugCommandFilter"
], Ar = {
  onMorphComplete: "morphComplete",
  onMorphStart: "morphStart",
  onPostRender: "postRender",
  onPreRender: "preRender",
  onPreUpdate: "preUpdate",
  onPostUpdate: "postUpdate",
  onRenderError: "renderError",
  onTerrainProviderChange: "terrainProviderChanged"
}, Fr = ["mode", "morphDuration"], ct = (t, e, i) => {
  switch (e) {
    case Oe.SCENE2D:
      t.morphTo2D(i);
      break;
    case Oe.COLUMBUS_VIEW:
      t.morphToColumbusView(i);
      break;
    case Oe.SCENE3D:
      t.morphTo3D(i);
      break;
  }
}, Ir = l({
  name: "Scene",
  create(t, e) {
    return t.scene && e.mode && ct(t.scene, e.mode, e.morphDuration), t.scene;
  },
  update(t, e, i) {
    e.mode !== i.mode && e.mode && ct(t, e.mode, e.morphDuration);
  },
  cesiumProps: Br,
  cesiumEventProps: Ar,
  otherProps: Fr,
  setCesiumPropsAfterCreate: !0
}), $a = Ir, Wr = [
  "bounceAnimationTime",
  "enableCollisionDetection",
  "enableInputs",
  "enableLook",
  "enableRotate",
  "enableTilt",
  "enableTranslate",
  "enableZoom",
  "inertiaSpin",
  "inertiaTranslate",
  "inertiaZoom",
  "lookEventTypes",
  "maximumMovementRatio",
  "maximumZoomDistance",
  "minimumCollisionTerrainHeight",
  "minimumPickingTerrainHeight",
  "minimumTrackBallHeight",
  "minimumZoomDistance",
  "rotateEventTypes",
  "tiltEventTypes",
  "translateEventTypes",
  "zoomEventTypes",
  "minimumPickingTerrainDistanceWithInertia"
], Vr = l({
  name: "ScreenSpaceCameraController",
  create: (t) => {
    var e;
    return (e = t.scene) == null ? void 0 : e.screenSpaceCameraController;
  },
  cesiumProps: Wr,
  setCesiumPropsAfterCreate: !0
}), Ta = Vr, Ur = ({ action: t, modifier: e, type: i }) => {
  const o = Ee();
  return oe(() => {
    if (!(!o.screenSpaceEventHandler || o.screenSpaceEventHandler.isDestroyed())) {
      if (t)
        return o.screenSpaceEventHandler.setInputAction(t, i, e), () => {
          !o.screenSpaceEventHandler || o.screenSpaceEventHandler.isDestroyed() || o.screenSpaceEventHandler.removeInputAction(i, e);
        };
      o.screenSpaceEventHandler.removeInputAction(i, e);
    }
  }, [t, o.screenSpaceEventHandler, e, i]), null;
}, Ma = Ur, jr = l({
  name: "ScreenSpaceEventHandler",
  create(t, e) {
    var i;
    return e.useDefault ? (i = t.cesiumWidget) == null ? void 0 : i.screenSpaceEventHandler : t.scene ? new mt(t.scene.canvas) : void 0;
  },
  destroy(t) {
    t.isDestroyed() || t.destroy();
  },
  provide(t) {
    return {
      screenSpaceEventHandler: t
    };
  }
}), ka = jr, Hr = [
  "darkness",
  "fadingEnabled",
  "maximumDistance",
  "enabled",
  "normalOffset",
  "softShadows",
  "size"
], xr = l({
  name: "ShadowMap",
  create: (t) => {
    var e;
    return (e = t.scene) == null ? void 0 : e.shadowMap;
  },
  cesiumProps: Hr
}), _a = xr, zr = [
  "brightnessShift",
  "hueShift",
  "saturationShift",
  "show",
  "perFragmentAtmosphere",
  "atmosphereLightIntensity",
  "atmosphereRayleighCoefficient",
  "atmosphereMieCoefficient",
  "atmosphereRayleighScaleHeight",
  "atmosphereMieScaleHeight",
  "atmosphereMieAnisotropy"
], Nr = l({
  name: "SkyAtmosphere",
  create: (t) => {
    var e;
    return (e = t.scene) == null ? void 0 : e.skyAtmosphere;
  },
  cesiumProps: zr,
  setCesiumPropsAfterCreate: !0
}), La = Nr, Yr = ["sources", "show"], Kr = l({
  name: "SkyBox",
  create: (t) => {
    var e;
    return (e = t.scene) == null ? void 0 : e.skyBox;
  },
  cesiumProps: Yr,
  setCesiumPropsAfterCreate: !0
}), Oa = Kr, qr = ["glowFactor", "show"], Jr = l({
  name: "Sun",
  create(t) {
    if (!t.scene)
      return;
    const e = new tt();
    return t.scene.sun = e, e;
  },
  destroy(t, e) {
    e.scene && !e.scene.isDestroyed() && (e.scene.sun = new tt());
  },
  cesiumProps: qr,
  setCesiumPropsAfterCreate: !0
}), Ga = Jr, Zr = [
  "clippingPlanes",
  "maximumMemoryUsage",
  "modelMatrix",
  "shadows",
  "show",
  "style",
  "intervals"
], Xr = ["clock", "shading"], Qr = ["onReady"], es = {
  onFrameChange: "frameChanged"
}, ts = l({
  name: "TimeDynamicPointCloud",
  create(t, e) {
    var o;
    if (!t.cesiumWidget || !t.primitiveCollection || !((o = t.cesiumWidget) != null && o.clock))
      return;
    const i = new $i({
      ...e,
      clock: e.clock ?? t.cesiumWidget.clock
    });
    if (e.onReady) {
      const r = () => {
        var c;
        (c = e.onReady) == null || c.call(e, i), i.frameChanged.removeEventListener(r);
      };
      i.frameChanged.addEventListener(r);
    }
    return t.primitiveCollection.add(i), i;
  },
  destroy(t, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(t), t.isDestroyed() || t.destroy();
  },
  cesiumProps: Zr,
  cesiumReadonlyProps: Xr,
  cesiumEventProps: es,
  otherProps: Qr,
  useCommonEvent: !0
}), Ba = ts, is = [
  "terrainShadows",
  "clockTrackedDataSource",
  "targetFrameRate",
  "useDefaultRenderLoop",
  "resolutionScale",
  "allowDataSourcesToSuspendAnimation",
  "trackedEntity",
  "selectedEntity",
  "shadows",
  "useBrowserRecommendedResolution",
  "creditDisplay"
], ns = [
  "baseLayer",
  "animation",
  "baseLayerPicker",
  "fullscreenButton",
  "vrButton",
  "geocoder",
  "homeButton",
  "infoBox",
  "sceneModePicker",
  "selectionIndicator",
  "timeline",
  "navigationHelpButton",
  "navigationInstructionsInitiallyVisible",
  "scene3DOnly",
  "shouldAnimate",
  "clockViewModel",
  "selectedImageryProviderViewModel",
  "imageryProviderViewModels",
  "selectedTerrainProviderViewModel",
  "terrainProviderViewModels",
  "skyBox",
  "skyAtmosphere",
  "fullscreenElement",
  "showRenderLoopErrors",
  "automaticallyTrackDataSourceClocks",
  "contextOptions",
  "sceneMode",
  "mapProjection",
  "globe",
  "orderIndependentTranslucency",
  "creditContainer",
  "creditViewport",
  "dataSources",
  "mapMode2D",
  "projectionPicker",
  "requestRenderMode",
  "maximumRenderTimeChange",
  "depthPlaneEllipsoidOffset",
  "msaaSamples",
  "blurActiveElementOnCanvasFocus",
  "terrain"
], os = {
  onSelectedEntityChange: "selectedEntityChanged",
  onTrackedEntityChange: "trackedEntityChanged"
}, rs = [
  "className",
  "id",
  "style",
  "full",
  "containerProps",
  "extend",
  "terrainProvider"
], ss = l({
  name: "Viewer",
  async create(t, { baseLayer: e, terrainProvider: i, ...o }, r) {
    if (!r)
      return;
    let c;
    i && typeof i == "object" && typeof i.then == "function" ? c = await i : c = i;
    const u = new Ti(r, {
      ...o,
      terrainProvider: c,
      baseLayer: e === !1 ? void 0 : e
    });
    if (!u)
      return;
    e === !1 && u.imageryLayers.removeAll(), u && o.extend && (Array.isArray(o.extend) ? o.extend.forEach((m) => {
      u.extend(m, {});
    }) : u.extend(o.extend, {}));
    const y = new Pe(u.scene);
    return [u, y];
  },
  destroy(t, e, i, o) {
    o && !o.isDestroyed() && o.destroy(), t.isDestroyed() || t.destroy();
  },
  provide(t, e, i, o) {
    return {
      viewer: t,
      cesiumWidget: t.cesiumWidget,
      dataSourceCollection: t.dataSources,
      entityCollection: t.entities,
      scene: t.scene,
      camera: t.scene.camera,
      imageryLayerCollection: t.scene.globe.imageryLayers,
      primitiveCollection: t.scene.primitives,
      globe: t.scene.globe,
      __$internal: {
        onUpdate: i == null ? void 0 : i.onUpdate
      },
      [ne]: o
    };
  },
  containerProps: ({ id: t, className: e, style: i, full: o, containerProps: r }) => ({
    className: e,
    id: t,
    style: {
      ...o ? {
        position: "absolute",
        bottom: "0",
        left: "0",
        right: "0",
        top: "0"
      } : {},
      ...i
    },
    ...r
  }),
  cesiumProps: is,
  cesiumReadonlyProps: ns,
  cesiumEventProps: os,
  otherProps: rs,
  renderContainer: !0,
  useCommonEvent: !0,
  useRootEvent: !0
}), Aa = ss, as = [
  "positions",
  "maximumHeights",
  "minimumHeights",
  "show",
  "fill",
  "material",
  "outline",
  "outlineColor",
  "outlineWidth",
  "granularity",
  "shadows",
  "distanceDisplayCondition"
], cs = {
  onDefinitionChange: "definitionChanged"
}, ls = l({
  name: "WallGraphics",
  create(t, e) {
    if (!t.entity)
      return;
    const i = new Mi(e);
    return t.entity.wall = i, i;
  },
  destroy(t, e) {
    e.entity && (e.entity.wall = void 0);
  },
  cesiumProps: as,
  cesiumEventProps: cs
}), Fa = ls;
export {
  Ca as AmbientOcclusion,
  ps as Billboard,
  vs as BillboardCollection,
  gs as BillboardGraphics,
  fa as BlackAndWhiteStage,
  Pa as Bloom,
  Sa as BlurStage,
  Cs as BoxGraphics,
  ha as BrightnessStage,
  Ps as Camera,
  Ss as CameraFlyHome,
  Es as CameraFlyTo,
  ws as CameraFlyToBoundingSphere,
  bs as CameraLookAt,
  Ds as Cesium3DTileset,
  Rs as Cesium3DTilesetGraphics,
  Fe as CesiumContext,
  $s as CesiumWidget,
  Ts as ClassificationPrimitive,
  Ms as Clock,
  ks as CloudCollection,
  _i as Consumer,
  _s as CorridorGraphics,
  Ls as CumulusCloud,
  Os as CustomDataSource,
  Gs as CylinderGraphics,
  Bs as CzmlDataSource,
  Ea as DepthOfFieldStage,
  ba as EdgeDetectionStage,
  As as EllipseGraphics,
  Fs as EllipsoidGraphics,
  Is as Entity,
  Ws as EntityDescription,
  Pe as EventManager,
  Vs as Fog,
  pa as Fxaa,
  Us as GeoJsonDataSource,
  js as Globe,
  Hs as GroundPolylinePrimitive,
  xs as GroundPrimitive,
  zs as GroundPrimitiveCollection,
  Ns as ImageryLayer,
  Ys as ImageryLayerCollection,
  Ks as KmlDataSource,
  qs as Label,
  Js as LabelCollection,
  Zs as LabelGraphics,
  ya as LensFlareStage,
  Xs as Model,
  Qs as ModelGraphics,
  ea as Moon,
  va as NightVisionStage,
  ta as ParticleSystem,
  ia as PathGraphics,
  na as PlaneGraphics,
  oa as PointGraphics,
  ra as PointPrimitive,
  sa as PointPrimitiveCollection,
  aa as PolygonGraphics,
  ca as Polyline,
  la as PolylineCollection,
  ua as PolylineGraphics,
  da as PolylineVolumeGraphics,
  ma as PostProcessStage,
  ga as PostProcessStageComposite,
  Da as Primitive,
  hs as Provider,
  Ra as RectangleGraphics,
  $a as Scene,
  Ta as ScreenSpaceCameraController,
  Ma as ScreenSpaceEvent,
  ka as ScreenSpaceEventHandler,
  _a as ShadowMap,
  wa as SilhouetteStage,
  La as SkyAtmosphere,
  Oa as SkyBox,
  Ga as Sun,
  Ba as TimeDynamicPointCloud,
  Aa as Viewer,
  Fa as WallGraphics,
  be as createCameraOperation,
  l as createCesiumComponent,
  F as createPostProcessStage,
  Be as entries,
  ne as eventManagerContextKey,
  Ae as eventNames,
  de as includes,
  Ai as isDestroyable,
  Fi as isDestroyed,
  Gi as pick,
  Bi as shallowEquals,
  Ee as useCesium,
  Ii as useCesiumComponent,
  ys as withCesium
};
