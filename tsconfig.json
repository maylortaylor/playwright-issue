{
	// "include": [
	// 	"src/**/*",
	// 	"tests/**/*"
	// ],
	// "exclude": [
	// 	"node_modules",
	// 	"./node_modules",
	// 	"./node_modules/*",
	// 	"./node_modules/@types/node/index.d.ts",
	// 	"./dist/*",
	// 	"./dist/amver-ui/*",
	// 	// "src/**/*.test.ts",
	// 	// "src/**/*.spec.ts"
	// ],
	"compilerOptions": {
		/* Visit https://aka.ms/tsconfig.json to read more about this file */

		/* Basic Options */
		"incremental": true /* Enable incremental compilation */,
		"target": "ES6" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */,
		"module": "ESNext" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,
		"lib": [
			"ESNext",
			"DOM",
			"DOM.Iterable"
		] /* Specify library files to be included in the compilation. */,
		"allowJs": true /* Allow javascript files to be compiled. */,
		"checkJs": false /* Report errors in .js files. */,
		"jsx": "react" /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */,
		"sourceMap": true /* Generates corresponding '.map' file. */,
		"rootDir": "." /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */,
		"removeComments": true /* Do not emit comments to output. */,
		"noEmit": false /* Do not emit outputs. */,
		"noEmitOnError": true,
		"emitDeclarationOnly": false,
		"isolatedModules": true /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */,
		// "declaration": true,                   /* Generates corresponding '.d.ts' file. */
		// "declarationMap": true,                /* Generates a sourcemap for each corresponding '.d.ts' file. */
		// "outFile": "./",                       /* Concatenate and emit output to single file. */
		// "outDir": "./",                        /* Redirect output structure to the directory. */
		// "composite": true,                     /* Enable project compilation */
		// "tsBuildInfoFile": "./",               /* Specify file to store incremental compilation information */
		// "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
		// "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */

		/* Strict Type-Checking Options */
		"strict": true /* Enable all strict type-checking options. */,
		"noImplicitAny": false /* Raise error on expressions and declarations with an implied 'any' type. */,
		"strictNullChecks": true /* Enable strict null checks. */,
		"noImplicitThis": false /* Raise error on 'this' expressions with an implied 'any' type. */,
		"alwaysStrict": true /* Parse in strict mode and emit "use strict" for each source file. */,
		// "strictFunctionTypes": true,           /* Enable strict checking of function types. */
		// "strictBindCallApply": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
		// "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */

		/* Additional Checks */
		"noUnusedLocals": false /* Report errors on unused locals. */,
		"noUnusedParameters": false /* Report errors on unused parameters. */,
		"noImplicitReturns": true /* Report error when not all code paths in function return a value. */,
		"noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement. */,

		/* Module Resolution Options */
		"moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
		"baseUrl": "." /* Base directory to resolve non-absolute module names. */,
		"outDir": "./dist/amver-ui/",
		"paths": {
			"*": ["node_modules/*", "src/types/*"]
			// "@/*": ["src/*"]
			// "cesium": ["node_modules/cesium/Build/Cesium/Cesium.js"]
			// "appSrc/*": ["src/*"],
			// "appComponents/*": ["src/components/*"]
		} /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */,
		"types": [
			"node",
			// "@types/webpack-env"
		] /* Type declaration files to be included in compilation. */,
		"allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
		"esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
		"allowUmdGlobalAccess": true /* Allow accessing UMD globals from modules. */,
		"useDefineForClassFields": true,
		"resolveJsonModule": true,
		// "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
		// "typeRoots": [],                       /* List of folders to include type definitions from. */
		// "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
		// "allowImportingTsExtensions": true,

		/* Source Map Options */
		// "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
		// "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
		// "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
		// "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

		/* Experimental Options */
		"experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
		"emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */

		/* Advanced Options */
		"skipLibCheck": true /* Skip type checking of declaration files. */,
		"forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */
	},
	"ts-node": {
		"esm": true,
		"experimentalSpecifierResolution": "node",
		"compilerOptions": {
			"module": "CommonJS"
		}
	}
}
